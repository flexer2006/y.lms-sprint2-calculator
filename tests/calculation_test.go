package test

import (
	"math"
	"testing"

	"github.com/flexer2006/y.lms-sprint2-calculator/pkg/calculation"
)

func TestCalculator(t *testing.T) {
	tests := []struct {
		name     string
		expr     string
		expected float64
		wantErr  bool
	}{

		{"Простое сложение", "2 + 3", 5, false},
		{"Простое вычитание", "5 - 2", 3, false},
		{"Простое умножение", "3 * 4", 12, false},
		{"Простое деление", "10 / 2", 5, false},
		{"Простой остаток", "7 % 3", 1, false},
		{"Простое возведение в степень", "2 ^ 3", 8, false},

		{"Сложение с отрицательным числом", "-2 + 3", 1, false},
		{"Вычитание отрицательного числа", "5 - (-3)", 8, false},
		{"Умножение отрицательных чисел", "-3 * -4", 12, false},
		{"Деление на отрицательное число", "10 / -2", -5, false},
		{"Возведение отрицательного числа в степень (нечетная)", "-2 ^ 3", -8, false},
		{"Возведение отрицательного числа в степень (четная)", "-2 ^ 2", 4, false},
		{"Модуль с отрицательным делимым", "-7 % 3", -1, false},
		{"Модуль с отрицательным делителем", "7 % -3", 1, false},

		{"Сложение дробных чисел", "2.5 + 3.1", 5.6, false},
		{"Вычитание дробных чисел", "5.7 - 2.3", 3.4, false},
		{"Умножение дробных чисел", "1.5 * 4.2", 6.3, false},
		{"Деление дробных чисел", "10.5 / 2.5", 4.2, false},
		{"Возведение дробного числа в степень", "2.5 ^ 2", 6.25, false},

		{"Приоритет умножения над сложением", "2 + 3 * 4", 14, false},
		{"Приоритет деления над вычитанием", "10 - 6 / 2", 7, false},
		{"Простые скобки", "(2 + 3) * 4", 20, false},
		{"Вложенные скобки", "((2 + 3) * 4) - 2", 18, false},
		{"Множественные скобки", "(2 + (3 * 4)) / 2", 7, false},
		{"Сложные вложенные скобки", "(1 + (2 * (3 + 4) - 5)) * 2", 20, false},

		{"Сложное выражение с разными операторами", "3 + 4 * 2 / (1 - 5) ^ 2 ^ 3", 3.0001220703125, false},
		{"Комбинация всех операторов", "2 ^ 3 + 4 * 5 - 6 / 2 % 2", 27, false},
		{"Выражение с множеством скобок", "((2 + 3) * (4 - 1)) ^ 2", 225, false},

		{"Одиночное число", "42", 42, false},
		{"Одиночное отрицательное число", "-42", -42, false},
		{"Одиночное дробное число", "42.42", 42.42, false},
		{"Одиночное отрицательное дробное число", "-42.42", -42.42, false},
		{"Выражение с множеством пробелов", "  2   +   3  ", 5, false},

		{"Пустое выражение", "", 0, true},
		{"Только пробелы", "   ", 0, true},
		{"Незакрытая скобка", "(1 + 2", 0, true},
		{"Неоткрытая скобка", "1 + 2)", 0, true},
		{"Двойной оператор", "1 ++ 2", 0, true},
		{"Недопустимый символ", "1 + a", 0, true},
		{"Деление на ноль", "5 / 0", 0, true},
		{"Модуль на ноль", "5 % 0", 0, true},
		{"Незавершенное выражение", "2 +", 0, true},
		{"Начало с оператора", "+ 2", 0, true},
		{"Конец с оператором", "2 +", 0, true},
		{"Пропущенный оператор между скобками", "(1)(2)", 0, true},
		{"Неправильная последовательность операторов", "1 + * 2", 0, true},
		{"Множественные десятичные точки", "1.2.3", 0, true},
		{"Пустые скобки", "()", 0, true},
		{"Модуль с дробным числом", "5.5 % 2", 0, true},
		{"Несбалансированные скобки", "((1 + 2) * 3", 0, true},
		{"Множественные ошибки", "1 ++ 2 + a)", 0, true},

		{"Очень длинное выражение", "1 + 2 + 3 + 4 + 5 + 6 + 7 + 8 + 9 + 10", 55, false},
		{"Глубоко вложенные скобки", "((((1 + 2) * 3) - 4) / 5)", 1, false},
		{"Множественные степени", "2 ^ 2 ^ 3", 256, false},
		{"Комбинация унарного и бинарного минуса", "2 * -(-3)", 6, false},
	}

	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			result, err := calculation.EvaluateExpression(tt.expr)

			if (err != nil) != tt.wantErr {
				t.Errorf("EvaluateExpression(%q) error = %v, wantErr %v", tt.expr, err, tt.wantErr)
				return
			}

			if !tt.wantErr {

				if math.Abs(result-tt.expected) > 1e-10 {
					t.Errorf("EvaluateExpression(%q) = %v, want %v", tt.expr, result, tt.expected)
				}
			}
		})
	}
}
